libname lib1 'F:\Zhanar TAQ';
libname lib2 'E:\Dissertation\SAS DATA from HARD';
libname lib 'e:\Dissertation\SAS DATA from HARD\20150821';
run;

data v_mydata/view=v_mydata;
set lib.Qstats_2002;
run;

proc contents data=v_mydata;
run;

/*Download Data*/
data Qstat2002;
set lib.Qstats_2002 (drop= QuotedSpread_Dollar QuotedSpread_Percent TotalBidDepth_Share TotalOfrDepth_Share 
price_range sumtime wMaxBidDepth_Dollar wMaxBidDepth_Share wMaxOfrDepth_Dollar wMaxOfrDepth_Share wTotalBidDepth_Dollar 
 wTotalOfrDepth_Dollar );
where DATE between '02DEC2002'd and '31DEC2002'd; 
run;

/*Data description*/
proc univariate data=Qstat2002;
var wQuotedSpread_Dollar;
run; 

proc print data=Qstat2002 (obs=30);
run;


/*calculate average midpoint*/
data Qstat2002(drop= max_midpoint min_midpoint);
set Qstat2002; 
averagemidoint= MEAN(max_midpoint,min_midpoint);
run;

proc univariate data=Qstat2002;
var averagemidoint;
run; 

/*export data*/
data lib.Qstat2002;
set Qstat2002;
run;


/***REPEAT FOR 2003***/
/*Download Data*/
data Qstat2003;
set lib.Qstats_2003 (drop= QuotedSpread_Dollar QuotedSpread_Percent TotalBidDepth_Share TotalOfrDepth_Share 
price_range sumtime wMaxBidDepth_Dollar wMaxBidDepth_Share wMaxOfrDepth_Dollar wMaxOfrDepth_Share wTotalBidDepth_Dollar 
 wTotalOfrDepth_Dollar );
where DATE between '01JAN2003'd and '31Jul2003'd; 
run;
data Qstat2003(drop= max_midpoint min_midpoint);
set Qstat2003; 
averagemidoint= MEAN(max_midpoint,min_midpoint);
run;
data lib.Qstat2003;
set Qstat2003;
run;

proc append base=Qstat2002 data=Qstat2003;
run;
proc sort data=Qstat2002;
by SYMBOL DATE hour;
run;
data lib.Qstat;
set Qstat2002;
run;

/******Trades stats*******/

data v_mydata/view=v_mydata;
set lib.tstats_2002;
run;

proc contents data=v_mydata;
run;
/*Download Data*/
data Tstat2002;
set lib.Tstats_2002 (Keep= SYMBOL DATE HOUR EffectiveSpread_Percent_SW EffectiveSpread_Dollar_SW);
where DATE between '02DEC2002'd and '31DEC2002'd; 
run;

data Tstat2003;
set lib.Tstats_2003 (Keep= SYMBOL DATE HOUR EffectiveSpread_Percent_SW EffectiveSpread_Dollar_SW);
where DATE between '01JAN2003'd and '31Jul2003'd; 
run;
proc print data=Tstat2003 (obs=30);
run;

proc append base=Tstat2002 data=Tstat2003;
run;
proc sort data=Tstat2002;
by SYMBOL DATE hour;
run;
data lib.Tstat;
set Tstat2002; 
run;

data Stats;
merge Qstat2002(in=x) Tstat2002(in=y);
by SYMBOL DATE hour;
if x and y then output;
run;

data lib.stats;
set stats; run;

data stats; set lib.stats; run;

/******Realized spread stats*******/

data v_mydata/view=v_mydata;
set lib.rstats1_2002;
run;

proc contents data=v_mydata;
run;
/*Download Data*/
data rstat2002;
set lib1.rstats1_2002 (Keep= SYMBOL DATE HOUR PercentPriceImpact_LR_SW PercentRealizedSpread_LR_SW);
where DATE between '02DEC2002'd and '31DEC2002'd; 
run;

data rstat2003;
set lib1.rstats1_2003 (Keep= SYMBOL DATE HOUR PercentPriceImpact_LR_SW PercentRealizedSpread_LR_SW);
where DATE between '01JAN2003'd and '31Jul2003'd; 
run;

proc append base=rstat2002 data=rstat2003;
run;
proc sort data=Rstat2002;
by SYMBOL DATE hour;
run;
data lib.Rstat;
set Rstat2002; 
run;

data Stats;
merge Stats(in=x) Rstat2002(in=y);
by SYMBOL DATE hour;
if x and y then output;
run;


data lib.MergedData;
set Stats; 
run;


/******Create AT dummy*******/

data Stats;
set Stats (drop=number_quotes);
if hour=33 then delete;
run;

proc import out=autoquote
datafile = "E:\Dissertation\SAS DATA from HARD\Nyse listed stocks.csv" 
dbms=csv replace; getnames=yes; datarow=2;
run;
proc sort data=autoquote;
by SYMBOL;
run;

proc print data=autoquote;
run;

data Quotes;
merge Stats autoquote;
by SYMBOL;
run;
proc print data=Quotes(obs=30);
run;

data work.autodates (drop=autoquote_date);
 set work.Quotes;
 Autoquote = autoquote_date - 21916;
 format Autoquote date9.;
run;
proc print data = work.autodates(obs=30);
run; 

data ATdummy (drop=Autoquote);attrib symbol informat=$6. ;
set autodates ;
if Autoquote=. then autodummy=0; else
if Autoquote>DATE then autodummy=0; else autodummy=1;
if autoquote=. then Nyse=0;else Nyse=1;
run;

proc print data = work.ATdummy(obs=70);
run; 

proc means data=ATdummy NMISS N; run;

data ATdummy;
set ATdummy;
if nmiss(of _numeric_) > 0 then delete;
run;

data lib.ATdummy;set ATdummy;run;

data ATdummy;set lib.ATdummy;run;


/******Filter Data*******/
PROC FREQ DATA=ATdummy;
format symbol $6.;
  TABLES SYMBOL;
RUN;

proc means data=ATdummy noprint nway;
format symbol $6.;
class Symbol;
var averagemidoint;
output out=averages mean=averagemidoint;
run;

proc contents data=averages;
run; 

data filter (keep=symbol);
set averages;
if _Freq_<2161 then delete;else
if averagemidoint<15 then delete;else 
if averagemidoint>1000 then delete;
run;

proc print data=filter (obs=30);
run;
proc sort data=filter;by Symbol;run;
proc sort data=ATdummy;by Symbol;run;
data FilteredData ;
merge filter(in=x)   ATdummy(in=y);
by SYMBOL;
if x and y then output;
run;

PROC FREQ DATA=FilteredData; 
TABLES Symbol; 
RUN;
proc contents data=FilteredData;
run; 
proc print data=filtereddata (obs=30);
run;

data filtereddata (drop=wTotalOfrDepth_Share wTotalBidDepth_Share );
set filtereddata;
Qdepth=(wTotalOfrDepth_Share +wTotalBidDepth_Share )/2;
run;
data lib.filtereddata;
set filtereddata;
run;

data filtereddata;
set lib.filtereddata;
run;

* Trim or winsorize macro
* byvar = none for no byvar;
* type  = delete/winsor (delete will trim, winsor will winsorize;
*dsetin = dataset to winsorize/trim;
*dsetout = dataset to output with winsorized/trimmed values;
*byvar = subsetting variables to winsorize/trim on;
%macro winsor(dsetin=, dsetout=, byvar=none, vars=, type=winsor, pctl=1 99);

%if &dsetout = %then %let dsetout = &dsetin;
     
%let varL=;
%let varH=;
%let xn=1;
  
%do %until ( %scan(&vars,&xn)= );
    %let token = %scan(&vars,&xn);
    %let varL = &varL &token.L;
    %let varH = &varH &token.H;
    %let xn=%EVAL(&xn + 1);
%end;
  
%let xn=%eval(&xn-1);
  
data xtemp;
    set &dsetin;
    run;
  
%if &byvar = none %then %do;
  
    data xtemp;
        set xtemp;
        xbyvar = 1;
        run;
  
    %let byvar = xbyvar;
  
%end;
  
proc sort data = xtemp;
    by &byvar;
    run;
  
proc univariate data = xtemp noprint;
    by &byvar;
    var &vars;
    output out = xtemp_pctl PCTLPTS = &pctl PCTLPRE = &vars PCTLNAME = L H;
    run;
  
data &dsetout;
    merge xtemp xtemp_pctl;
    by &byvar;
    array trimvars{&xn} &vars;
    array trimvarl{&xn} &varL;
    array trimvarh{&xn} &varH;
  
    do xi = 1 to dim(trimvars);
  
        %if &type = winsor %then %do;
            if not missing(trimvars{xi}) then do;
              if (trimvars{xi} < trimvarl{xi}) then trimvars{xi} = trimvarl{xi};
              if (trimvars{xi} > trimvarh{xi}) then trimvars{xi} = trimvarh{xi};
            end;
        %end;
  
        %else %do;
            if not missing(trimvars{xi}) then do;
              if (trimvars{xi} < trimvarl{xi}) then delete;
              if (trimvars{xi} > trimvarh{xi}) then delete;
            end;
        %end;
  
    end;
    drop &varL &varH xbyvar xi;
    run;
  
%mend winsor;

%winsor(dsetin=filtereddata, dsetout=Filtereddata1, byvar=none, vars=EffectiveSpread_Percent_SW wQuotedSpread_Percent
realized_variance EffectiveSpread_Dollar_SW wQuotedSpread_Dollar
Qdepth, type=winsor, pctl=1 99);


PROC PRINT DATA=FILTEREDDATA1 (OBS=30);RUN;

proc univariate data=filtereddata1;
var wQuotedSpread_Percent 
EffectiveSpread_Percent_SW 
EffectiveSpread_Dollar_SW 
wQuotedSpread_Dollar
Qdepth;
run;


proc univariate data=filtereddata1(where=(date between '02DEC2002'd and '29jan2003'd));
by NYSE;
var wQuotedSpread_Percent 
EffectiveSpread_Percent_SW EffectiveSpread_Dollar_SW wQuotedSpread_Dollar
Qdepth;
run;

proc univariate data=filtereddata1(where=(date between '30jan2003'd and '27may2003'd));
by NYSE;
var wQuotedSpread_Percent 
EffectiveSpread_Percent_SW EffectiveSpread_Dollar_SW wQuotedSpread_Dollar
Qdepth;
run;

proc univariate data=filtereddata1(where=(date between '28may2003'd and '31JUL2003'd));
by NYSE;
var wQuotedSpread_Percent 
EffectiveSpread_Percent_SW EffectiveSpread_Dollar_SW wQuotedSpread_Dollar
Qdepth;
run;


proc sort data=filtereddata1;
by date;
run;


proc univariate data=filtereddata1(where=(date between '02DEC2002'd and '29jan2003'd));
var wQuotedSpread_Percent 
EffectiveSpread_Percent_SW EffectiveSpread_Dollar_SW wQuotedSpread_Dollar
Qdepth;
run;

proc univariate data=filtereddata1(where=(date between '30jan2003'd and '27may2003'd));
var wQuotedSpread_Percent 
EffectiveSpread_Percent_SW EffectiveSpread_Dollar_SW wQuotedSpread_Dollar
Qdepth;
run;

proc univariate data=filtereddata1(where=(date between '28may2003'd and '31JUL2003'd));
var wQuotedSpread_Percent 
EffectiveSpread_Percent_SW EffectiveSpread_Dollar_SW wQuotedSpread_Dollar
Qdepth;
run;

proc univariate data=filtereddata1;
by NYSE;
var wQuotedSpread_Percent 
EffectiveSpread_Percent_SW EffectiveSpread_Dollar_SW wQuotedSpread_Dollar
Qdepth;
run;


proc means data=filtereddata noprint nway;
class Date hour;
var wQuotedSpread_Percent 
EffectiveSpread_Percent_SW 
EffectiveSpread_Dollar_SW 
wQuotedSpread_Dollar
Qdepth;
output out=market sum(wQuotedSpread_Percent)= 
sum(EffectiveSpread_Percent_SW)= 
sum(EffectiveSpread_Dollar_SW)=
sum(wQuotedSpread_Dollar)=
sum(Qdepth)=/autoname;
run;

proc print data=market (obs=30);
run;

proc sort data=filtereddata;
by date hour;
run;

/******Create variables for market liquidity*******/

data Market1;
merge filtereddata   market;
by DATE hour;
run;

proc print data=market1 (obs=30);
run;
data Market2 (drop=wQuotedSpread_Percent_Sum 
EffectiveSpread_Percent_SW_sum 
EffectiveSpread_Dollar_SW_sum wQuotedSpread_Dollar_sum
Qdepth_sum) ;
set Market1;
MQSpread=(wQuotedSpread_Percent_sum-wQuotedSpread_Percent)/(_Freq_-1); 
MESpread=(EffectiveSpread_Percent_SW_Sum-EffectiveSpread_Percent_SW)/ (_Freq_-1);
MESpread_USD=(EffectiveSpread_Dollar_SW_sum-EffectiveSpread_Dollar_SW)/(_Freq_-1);
MQSpread_USD=(wQuotedSpread_Dollar_sum-wQuotedSpread_Dollar)/(_Freq_-1);
MQdepth=(Qdepth_sum-Qdepth)/(_Freq_-1);
run;
proc print data=market2 (obs=30);
run;

data lib.Market2v1;
set Market2;
run;

DATA rename (DROP=
wQuotedSpread_Percent 
EffectiveSpread_Percent_SW 
EffectiveSpread_Dollar_SW 
wQuotedSpread_Dollar
realized_variance);
SET Market2;
QSpread = wQuotedSpread_Percent;
ESpread = EffectiveSpread_Percent_SW;
QSpread_USD = wQuotedSpread_Dollar;
ESpread_USD = EffectiveSpread_Dollar_SW;
Qdepth=wQuotedSpread_Dollar;
Var = realized_variance;
RUN;

/*First differencing*/
proc sort data=rename;by symbol date hour;run;
DATA diff (drop=DIF_qspread DIF_espread DIF_mqspread DIF_mespread Dif_Qdepth dif_mqdepth 
DIF_qspread_USD DIF_espread_USD DIF_mqspread_USD DIF_mespread_USD Dif_var LAG_Midpoint averagemidoint);
SET rename;
BY Symbol Date hour;
DIF_qspread = DIF(qspread);IF FIRST.symbol THEN DO; DIF_qspread = .; END; qspread = DIF_qspread;

DIF_espread = DIF(espread);IF FIRST.symbol THEN DO;DIF_espread = .;END;espread = DIF_espread;

DIF_qspread_USD = DIF(qspread_USD);IF FIRST.symbol THEN DO;DIF_qspread_USD = .;END;qspread_USD = DIF_qspread_USD;

DIF_espread_USD = DIF(espread_USD);IF FIRST.symbol THEN DO;DIF_espread_USD = .;END;espread_USD = DIF_espread_USD;

DIF_qdepth = DIF(qdepth);IF FIRST.symbol THEN DO;DIF_qdepth = .;END;qdepth = DIF_qdepth;

DIF_mqdepth = DIF(mqdepth);IF FIRST.symbol THEN DO;DIF_mqdepth = .;END;mqdepth = DIF_mqdepth;

DIF_mqspread = DIF(mqspread);IF FIRST.symbol THEN DO;DIF_mqspread = .;END;mqspread = DIF_mqspread;

DIF_mespread = DIF(mespread);IF FIRST.symbol THEN DO;DIF_mespread = .;END;mespread = DIF_mespread;

DIF_mqspread_USD = DIF(mqspread_USD);IF FIRST.symbol THEN DO;DIF_mqspread_USD = .;END;mqspread_USD = DIF_mqspread_USD;

DIF_mespread_USD = DIF(mespread_USD);IF FIRST.symbol THEN DO;DIF_mespread_USD = .;END;mespread_USD = DIF_mespread_USD;

LAG_Midpoint = LAG(averagemidoint);IF FIRST.symbol THEN DO;LAG_Midpoint = .;END;Logret = log(averagemidoint/lag_Midpoint);

DIF_var = DIF(var);IF FIRST.symbol THEN DO;DIF_var = .;END;var = DIF_var;

RUN;

proc means data=diff NMISS N; run;

data diff;
set diff;
if nmiss(of _numeric_) > 0 then delete;
run;



/*Demean and standardise for time of the day effect*/
proc means data=diff noprint nway;
class symbol hour;
var QSpread 
ESpread 
QSpread_USD 
ESpread_USD
QDepth
MQSpread 
MESpread 
MQSpread_USD 
MESpread_USD
MQDepth 
Var 
Logret ;
output out=stats 
mean(qspread)= 
mean(ESpread)= 
mean(qspread_USD)=
mean(qdepth)= 
mean(ESpread_USD)= 
mean(MQSpread )=
mean(MESpread )=
mean(MQSpread_USD )=
mean(MESpread_USD )=
mean(MQDepth)=
mean(Var)=
mean(Logret)=
std(QSpread)= 
std(ESpread)= 
std(QSpread_USD)= 
std(ESpread_USD)= 
std(QDEPTH)= 
std(MQDEPTH)= 
std(MQSpread)= 
std(MESpread)= 
std(MQSpread_USD)= 
std(MESpread_USD)= 
std(Var )=
std(Logret )= 
/autoname;
run;
proc sort data=stats;
by symbol hour;
run;
 proc print data=stats;
 run;
proc sort data=DIFF;
by symbol hour;
run;
data standard;
merge DIFF   stats;
by symbol hour;
run;

proc print data=standard(obs=30);run;

proc contents data=standard;run;
data standard1 (drop=QSpread_mean 
ESpread_mean 
QSpread_USD_mean 
ESpread_USD_mean 
mQSpread_mean 
MESpread_mean 
mQSpread_USD_mean 
MESpread_USD_mean
QDEPTH_Mean
MQDEPTH_Mean
Logret_Mean
Var_Mean
Var_Stddev
Logret_Stddev
QSpread_Stddev 
ESpread_Stddev 
QSpread_USD_Stddev 
ESpread_USD_Stddev 
QDEPTH_Stddev 
MQDEPTH_Stddev 
MQSpread_Stddev 
MESpread_Stddev 
MQSpread_USD_Stddev 
MESpread_USD_Stddev 
_TYPE_ _FREQ_);
set standard;
QSpread=(QSpread-QSpread_mean)/QSpread_Stddev;
ESpread=(ESpread-ESpread_mean)/ESpread_Stddev;

QSpread_USD=(QSpread_USD-QSpread_USD_mean)/QSpread_USD_Stddev;
ESpread_USD=(ESpread_USD-ESpread_USD_mean)/ESpread_USD_Stddev;

mQSpread=(mQSpread-mQSpread_mean)/mQSpread_Stddev; 
MESpread=(MESpread-MESpread_mean)/MESpread_Stddev; 

mQSpread_USD=(mQSpread_USD-mQSpread_USD_mean)/mQSpread_USD_Stddev; 
MESpread_USD=(MESpread_USD-MESpread_USD_mean)/MESpread_USD_Stddev; 

QDEPTH=(QDEPTH-QDEPTH_mean)/QDEPTH_stddev;
MQDEPTH=(MQDEPTH-MQDEPTH_mean)/MQDEPTH_Stddev; 

Logret=(Logret-Logret_Mean)/Logret_sTDDEV;
Var=(Var-Var_Mean)/Var_STDDEV;
run;

proc means data=standard2 NMISS N; run;

%winsor(dsetin=standard1, dsetout=standard2, byvar=none, vars=QSpread QDepth MQdepth
ESpread QSpread_USD ESpread_USD MQSpread MESpread MQSpread_USD MESpread_USD Var 
Logret , type=winsor, pctl=1 99);


proc sort data=sTANDARD2;
by Symbol date hour;
run;


data lib.Standard2;
set standard2;
run;


/******Create lagged and lead values*******/

data leads;
 SET Standard2;
by symbol date hour;
 if eof1=0 then
 set Standard2 (firstobs=2 keep=DATE hour autodummy Var qspread espread qspread_USD espread_USD mqspread 
 mespread mqspread_USD mespread_USD qdepth mqdepth Logret  
 rename=(mqspread=leadmqspread mespread=leadmespread mqspread_USD=leadmqspread_USD mespread_USD=leadmespread_USD mqdepth=leadmqdepth Logret=leadLogret)) end=eof1;
 if last.Symbol then do;
leadmqspread= .;
leadmespread= .;
leadLogret= .;
leadmqspread_USD= .; leadmespread_USD= .; leadmqdepth= .;
end;
run;
proc print data=leads (obs=30);
run;
proc means data=leads NMISS N; run;

proc sort data=leads;by symbol date hour;run;
DATA Lags;
SET Leads;
by symbol date hour;

LAG_mqspread = LAG(mqspread );
IF FIRST.symbol THEN DO;
LAG_mqspread = .;
END;

LAG_mespread = LAG(mespread);
IF FIRST.symbol THEN DO;
LAG_mespread = .;
END;

LAG_mqdepth = LAG(mqdepth);
IF FIRST.symbol THEN DO;
LAG_mqdepth = .;
END;

LAG_mqspread_USD = LAG(mqspread_USD );
IF FIRST.symbol THEN DO;
LAG_mqspread_USD = .;
END;

LAG_mespread_USD = LAG(mespread_USD);
IF FIRST.symbol THEN DO;
LAG_mespread_USD = .;
END;

LAG_return = LAG(Logret);
IF FIRST.symbol THEN DO;
LAG_return = .;
END;

RUN;
proc print data=lags (obs=30);
run;
proc means data=Lags NMISS N; run;

data data;
set lags;
if nmiss(of _numeric_) > 0 then delete;
run;

data data1;
set data;
hour=hour-20;
tID=dhms(date,hour,0,0);
format tid datetime19.;
run;

proc sort data=data1;
by symbol tid;
run;

proc contents data=data1;
run;

data data1;
set data1;
atespread=mespread*autodummy;
atqspread=mqspread*autodummy;
atespread_USD=mespread_USD*autodummy;
atqspread_USD=mqspread_USD*autodummy;
atqdepth=qdepth*autodummy;
run;

data lib.final;
set data1;
run;

data data1;
set lib.final;
run;


proc print data=data1 (obs=30);run;


proc panel data=data1 outest=results1;
      id symbol tid;
      model espread=atespread mespread lag_mespread Leadmespread logret lag_return leadlogret autodummy var/ fixtwo;
   run;

proc panel data=data1 outest=results2;
      id symbol tid;
      model qspread=atqspread mqspread lag_mqspread Leadmqspread logret lag_return leadlogret autodummy var/ fixtwo;
   run;

   proc panel data=data1 outest=results3;
      id symbol tid;
      model espread_USD=atespread_USD mespread_USD lag_mespread_USD Leadmespread_USD logret lag_return leadlogret autodummy var/ fixtwo;
   run;

proc panel data=data1 outest=results4;
      id symbol tid;
      model qspread_USD=atqspread_USD mqspread_USD lag_mqspread_USD Leadmqspread_USD logret lag_return leadlogret autodummy var/ fixtwo;
   run;

proc panel data=data1 outest=results5;
      id symbol tid;
      model qdepth=atqdepth mqdepth lag_mqdepth Leadmqdepth logret lag_return leadlogret autodummy var/ fixtwo;
   run;
